"""add_ecommerce_models

Revision ID: 94a59bcb4ea8
Revises: d56e70c8428f
Create Date: 2025-04-01 07:09:53.717779

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '94a59bcb4ea8'
down_revision: Union[str, None] = 'd56e70c8428f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_cart_items_id', table_name='cart_items')
    op.drop_table('cart_items')
    op.drop_index('ix_order_items_id', table_name='order_items')
    op.drop_table('order_items')
    op.drop_index('ix_orders_id', table_name='orders')
    op.drop_table('orders')
    op.drop_index('ix_carts_id', table_name='carts')
    op.drop_table('carts')
    op.drop_index('ix_shipping_addresses_id', table_name='shipping_addresses')
    op.drop_table('shipping_addresses')
    op.drop_column('users', 'permissions')
    op.drop_column('users', 'role')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role', sa.VARCHAR(length=20), server_default=sa.text("'customer'::character varying"), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('permissions', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_table('shipping_addresses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('shipping_addresses_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('address_line1', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('address_line2', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('postal_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='shipping_addresses_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='shipping_addresses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_shipping_addresses_id', 'shipping_addresses', ['id'], unique=False)
    op.create_table('carts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('carts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='carts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='carts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_carts_id', 'carts', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('orders_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('shipping_address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('payment_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('telebirr_outtradeno', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('telebirr_msisdn', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['shipping_address_id'], ['shipping_addresses.id'], name='orders_shipping_address_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='orders_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_orders_id', 'orders', ['id'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tile_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_at_purchase', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='order_items_order_id_fkey'),
    sa.ForeignKeyConstraint(['tile_id'], ['tiles.id'], name='order_items_tile_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_items_pkey')
    )
    op.create_index('ix_order_items_id', 'order_items', ['id'], unique=False)
    op.create_table('cart_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cart_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tile_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('price_at_addition', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], name='cart_items_cart_id_fkey'),
    sa.ForeignKeyConstraint(['tile_id'], ['tiles.id'], name='cart_items_tile_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cart_items_pkey')
    )
    op.create_index('ix_cart_items_id', 'cart_items', ['id'], unique=False)
    # ### end Alembic commands ###
